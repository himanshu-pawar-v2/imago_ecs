replicaCount: 1

image:
  repository: 
  pullPolicy: Always
  tag: 

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

secret:
  AWS_REGION: dXMtd2VzdC0y
  DB_NAME: 
  DB_ENDPOINT_READER: "" 
  DB_PORT: ""
  DB_ENDPOINT_WRITER: ""
  AWS_SECRET_NAME: ""
  TABLE_NAME: dXNlcnM=


serviceAccount:
  create: true
  automount: true
  arn: ""
  name: "application"

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  annotations:
    alb.ingress.kubernetes.io/load-balancer-name: application-ingress
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/scheme: internet-facing

ingress:
  enabled: true
  className: "alb"
  annotations:
    alb.ingress.kubernetes.io/load-balancer-name: application-ingress
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/scheme: internet-facing
  tls: []

# resources: 
#   limits:
#     cpu: 100m
#     memory: 128Mi
#   requests:
#     cpu: 100m
#     memory: 128Mi

# livenessProbe:
#   httpGet:
#     path: /
#     port: http
# readinessProbe:
#   httpGet:
#     path: /
#     port: http

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
