name: Build and Deploy Infrastructure

on:
  workflow_dispatch:
    inputs:
      resource_prefix:
        description: 'Prefix for resource name'
        required: true
        default: 'v2-boilerplate'
      environment:
        description: 'Environment name'
        required: true
        default: 'dev'
      deployment_type:
        description: 'Deployment Type (Temporary)'
        required: true
        type: choice
        options:
          - Apply
          - Destroy
        default: Apply

permissions:
  id-token: write
  contents: read

env:
  resource_prefix: ${{ github.event.inputs.resource_prefix }}
  environment: ${{ github.event.inputs.environment }}
  deployment_type: ${{ github.event.inputs.deployment_type }}

jobs:
  build:
    name: 'Build and Test'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Infrastructure Tests
        uses: ./.github/actions/testing
        with:
          test_script: './scripts/run-tests.sh'

      # Add more steps for additional build tasks as needed

  deploy:
    name: 'Terragrunt Init/Plan/Apply'
    runs-on: ubuntu-latest
    needs: build
    environment: ${{ github.event.inputs.environment }}
    env:
      AWS_PRIMARY_REGION: ${{ vars.AWS_PRIMARY_REGION }}

    steps:
      - name: Setup AWS and Terragrunt
        uses: ./.github/actions/setup-terraform-terragrunt
        with:
          aws_region: ${{ env.AWS_PRIMARY_REGION }}
          aws_role_arn: arn:aws:iam::${{ secrets.ACCOUNT_ID }}:role/${{ secrets.ROLE_NAME }}
          terraform_version: 1.8.4
          terragrunt_version: 0.58.13

      - name: Make preprocess-config.sh executable
        run: chmod +x ./scripts/preprocess-config.sh

      - name: Preprocess config.yml for ${{ env.environment }}
        env:
          RESOURCE_PREFIX: ${{ env.resource_prefix }}
          ENVIRONMENT: ${{ env.environment }}
          ACCOUNT_ID: ${{ secrets.ACCOUNT_ID }}
        run: |
          TEMPLATE_FILE=./infra/config-${{ env.ENVIRONMENT }}.yml.template
          CONFIG_FILE=./infra/environments/${{ env.ENVIRONMENT }}/config.yml
          ./scripts/preprocess-config.sh $TEMPLATE_FILE $CONFIG_FILE

      - name: Verify config.yml
        env:
          ENVIRONMENT: ${{ env.environment }}
        run: |
          echo "Contents of config.yml:"
          cat ./infra/environments/${{ env.ENVIRONMENT }}/config.yml
          echo "Location of config.yml:"
          ls -l ./infra/environments/${{ env.ENVIRONMENT }}/config.yml

      - name: Make destroy_resources.sh executable
        run: chmod +x ./scripts/destroy-resources.sh

      - name: Determine Action
        id: action
        env:
          deployment_type: ${{ env.deployment_type }}
        run: |
          if [ "${{ env.deployment_type }}" == "Apply" ]; then
            echo "action=apply" >> $GITHUB_ENV
            echo "::set-output name=action_name::Terragrunt Apply"
          elif [ "${{ env.deployment_type }}" == "Destroy" ]; then
            echo "action=destroy" >> $GITHUB_ENV
            echo "::set-output name=action_name::Terragrunt Destroy"
          else
            echo "Invalid deployment type" && exit 1
          fi

      - name: Destroy Resources (if Destroy)
        if: env.action == 'destroy'
        run: |
          ./scripts/destroy-resources.sh ${{ env.resource_prefix }} ${{ env.environment }}

      - name: ${{ steps.action.outputs.action_name }}
        env:
          RESOURCE_PREFIX: ${{ env.resource_prefix }}
          ENVIRONMENT: ${{ env.environment }}
          ACCOUNT_ID: ${{ secrets.ACCOUNT_ID }}
        run: |
          echo $RESOURCE_PREFIX
          echo $ENVIRONMENT
          echo $ACCOUNT_ID
          cd ./infra/environments/${{ env.environment }}
          if [ "${{ env.action }}" == "apply" ]; then
            terragrunt run-all apply --terragrunt-non-interactive
          elif [ "${{ env.action }}" == "destroy" ]; then
            terragrunt run-all destroy --terragrunt-non-interactive
          fi

      # Uncomment and use the following for additional debugging if needed
      # - name: List files in environments directory
      #   run: ls -R ./infra/environments